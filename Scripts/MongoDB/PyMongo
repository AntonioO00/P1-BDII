{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOMhGp5mGwAAsZNI6NkGj4P",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/AntonioO00/P1-BDII/blob/main/T1_BDII.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install pymongo[srv,tls]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WQ-vvv5BU8cX",
        "outputId": "526f2c04-43e0-4523-be8e-b23ff2c86cf2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting pymongo[srv,tls]\n",
            "  Downloading pymongo-4.7.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (669 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m669.1/669.1 kB\u001b[0m \u001b[31m6.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hCollecting dnspython<3.0.0,>=1.16.0 (from pymongo[srv,tls])\n",
            "  Downloading dnspython-2.6.1-py3-none-any.whl (307 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m307.7/307.7 kB\u001b[0m \u001b[31m8.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hInstalling collected packages: dnspython, pymongo\n",
            "Successfully installed dnspython-2.6.1 pymongo-4.7.3\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pymongo\n",
        "import json\n",
        "import pprint"
      ],
      "metadata": {
        "id": "C4TRZn6RVBgZ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "mongo_user = \"AntonioO00\"\n",
        "mongo_pw = \"Toninho77\"\n",
        "mongo_host = \"clusterbd2.gnlzt4x.mongodb.net\"\n",
        "mongo_app = \"ClusterBD2\""
      ],
      "metadata": {
        "id": "f0RjLUAOVIYK"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# estrutura de conexão, não há necessidade de mudar nada por aqui! ;)\n",
        "conexao = pymongo.MongoClient(\"mongodb+srv://\" + mongo_user + \":\" + mongo_pw + \"@\" + mongo_host + \"/?retryWrites=true&w=majority&appName=\" + mongo_app)"
      ],
      "metadata": {
        "id": "iXNeUj2fVMCZ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# listando os bancos de dados que estão no seu cluster\n",
        "conexao.list_database_names()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nm9KYEAfVQkc",
        "outputId": "fce5a426-b72b-4a53-deb7-3a56e6f380cf"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['controle_cirurgias_bd', 'sample_mflix', 'admin', 'local']"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# definir uma variável para armazenar a conexão com o banco de dados\n",
        "# a variável conexão guarda o acesso ao banco, deve-se passar por parâmetro o nome do banco de dados a ser acessado e/ou criado\n",
        " bd = conexao[\"trabalho_bd2\"]"
      ],
      "metadata": {
        "id": "XWBT1ahBXf68"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# pode ser útil para obter informações gerais sobre o banco de dados\n",
        "bd.command(\"dbstats\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XfHApe-PYRZF",
        "outputId": "5da89bca-8531-4915-fc62-af10924436ba"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'db': 'trabalho_bd2',\n",
              " 'collections': 0,\n",
              " 'views': 0,\n",
              " 'objects': 0,\n",
              " 'avgObjSize': 0.0,\n",
              " 'dataSize': 0,\n",
              " 'storageSize': 0,\n",
              " 'totalFreeStorageSize': 0,\n",
              " 'numExtents': 0,\n",
              " 'indexes': 0,\n",
              " 'indexSize': 0,\n",
              " 'indexFreeStorageSize': 0,\n",
              " 'fileSize': 0,\n",
              " 'nsSizeMB': 0,\n",
              " 'ok': 1}"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# lista todas as coleções existentes no banco de dados selecionado\n",
        "bd.list_collection_names()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KRUcPvQ4Y4I1",
        "outputId": "045d95b7-944f-4a5f-a9ea-65b9179c297d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[]"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    }
  ]
}
